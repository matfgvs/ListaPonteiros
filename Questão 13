#include <stdio.h>
#include <stdlib.h>
#include <time.h>
//função que lé n valores do tipo float e os apresenta em ordem crescente.
void ordenarcrescente (float* a,int tamanho){
  int troca,i,j;
  float memtemp;
  troca=1;
  for(j=tamanho-1;(j>=1) && (troca == 1); j--){
    //O valor 0 é atribuido a "troca", pois assim caso não haja mais trocas a serem feitas, o processo se encerra.
    troca=0;
      for(i=0;i<j;i++){
        if(a[i]>a[i+1]){
          //A variável "memtemp" é utilizada para trocar as posições dos valores caso o na posição [i] seja maior que o na posição [i+1].
          memtemp=a[i];
          a[i]=a[i+1];
          a[i+1]=memtemp;
          troca=1;
        }
      }
  }
}

int main(void) {
//Declaração das variáveis.
float *v;
int i, n;
clock_t t,t1,t2;
//Entrada do tamanho do vetor.
printf("Digite o tamanho do vetor:");
scanf("%d",&n);
printf("\n");
//alocação do v.
v = (float*) malloc (n*sizeof(float));
//Caso o vetor não apresente tamanho a função encerra.
if(n == 0){
  printf("O vetor apresentado não tem tamanho.");
  return 0;
}else{
//Definindo os valores de cada posição do vetor.
for (i=0;i<n;i++){
v[i]=rand()%100;
}
//Imprime os valores de cada posição do vetor.
for (i=0;i<n;i++){
  printf("O valor na posição %d do vetor é: %f\n",i+1,v[i]);
}
printf("\n");
//Entra na função.
  t=clock();
  ordenarcrescente (v,n);
  t1=clock();
  t2=t1-t;
  //O tempo de execução da função é impresso.
  printf("Tempo de execução antes da função: %lf milissegundos.\n", ((double)t)/((CLOCKS_PER_SEC/1000)));
  printf("Tempo de execução depois da função: %lf milissegundos.\n", ((double)t1)/((CLOCKS_PER_SEC/1000)));
  printf("Tempo de execução da função: %lf milissegundos.\n\n", ((double)t2)/((CLOCKS_PER_SEC/1000)));

 
//Sai da função e imprime os valores ordenados crescentemente.
for (i=0;i<n;i++){
  printf("O valor na posição %d do vetor é: %f\n",i+1,v[i]);
}
//libera o v.
free(v);
  return 0;
  }
}